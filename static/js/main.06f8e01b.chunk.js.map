{"version":3,"sources":["header/ClockHeader.jsx","clock-section/components/clock-panel/ClockPanelContainer.jsx","clock-section/components/task-panel/task-setting/task-setting.jsx","clock-section/components/task-panel/task-item/TaskItem.jsx","clock-section/components/task-panel/task-item-lists/TaskItemLists.jsx","clock-section/components/task-panel/add-task-form/AddTaskForm.jsx","clock-section/components/task-panel/TaskPanelContainer.jsx","clock-section/ClockSection.jsx","document-page/DocumentPage.jsx","footer/Footer.jsx","App.js","reportWebVitals.js","index.js"],"names":["ClockHeader","className","src","alt","ClockPanelContainer","setBaseColor","faStepForward","useState","action","setAction","timer","setTimer","countDownActive","setCountDownActive","startButton","setStartButton","useEffect","timeoutTag","setTimeout","clearTimeout","onClick","confirmAlert","title","message","buttons","label","getSeconds","getMinutes","Math","floor","formatTime","style","color","position","top","boxShadow","TaskSetting","handleDeleteAllList","trashIcon","icon","faTrash","TaskItem","note","handleDelete","index","checkIcon","faCheckCircle","TaskItemLists","taskList","map","AddTaskForm","setEditForm","handleTaskContent","addNote","setAddNote","btnDisable","setBtnDisable","titleInput","useRef","noteInput","id","onSubmit","e","preventDefault","taskContent","current","value","target","reset","handleSumbit","type","placeholder","ref","onChange","name","form","disabled","TaskPanelContainer","ellipsisIcon","faEllipsisV","plusIcon","faPlus","taskSetting","setTaskSetting","editForm","setTaskList","afterDeleteList","filter","_","i","ClockSection","baseColor","backgroundColor","DocumentPage","Footer","githubIcon","faGithub","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06f8e01b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./header.scss\";\n\nconst ClockHeader = () => {\n  return (\n    <div className=\"header-container\">\n      <div className=\"header-icon-container\">\n        <img\n          className=\"tamoto-clock-icon\"\n          src=\"https://cdn0.iconfinder.com/data/icons/vegetables-ii-color/290/18-512.png\"\n          alt=\"tamoto-clock-icon\"\n        />\n        <span>Tomato Clock</span>\n      </div>\n      <div className=\"header-setting-container\">\n        <button className=\"report-button\">Report</button>\n        <button className=\"setting-button\">Setting</button>\n        <button className=\"login-button\">Login</button>\n      </div>\n    </div>\n  );\n};\n\nexport default ClockHeader;\n","import React, { useState, useEffect } from \"react\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStepForward } from \"@fortawesome/free-solid-svg-icons\";\n\nimport \"./clock-panel.scss\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\n\nconst ClockPanelContainer = ({ setBaseColor }) => {\n  //font-awesome icons\n  const stepForwardIcon = <FontAwesomeIcon icon={faStepForward} />;\n\n  //hooks\n  const [action, setAction] = useState(\"pomodoro\");\n  const [timer, setTimer] = useState(1500);\n  const [countDownActive, setCountDownActive] = useState(false);\n  const [startButton, setStartButton] = useState(\"#f81a0ad0\");\n\n  //change timer, background color and START button color\n  useEffect(() => {\n    if (action === \"pomodoro\") {\n      setTimer(1500);\n      setBaseColor(\"#f81a0ad0\");\n      setStartButton(\"#f81a0ad0\");\n    }\n    if (action === \"short\") {\n      setTimer(300);\n      setBaseColor(\"#f28aa5\");\n      setStartButton(\"#f28aa5\");\n    }\n    if (action === \"long\") {\n      setTimer(900);\n      setBaseColor(\"#74ad7a\");\n      setStartButton(\"#74ad7a\");\n    }\n  }, [action, setBaseColor]);\n\n  //if timer is ready, start count down when click the start button\n  useEffect(() => {\n    let timeoutTag;\n    if (countDownActive && timer > 0) {\n      timeoutTag = setTimeout(() => {\n        setTimer((timer) => timer - 1);\n      }, 1000);\n    }\n    return () => clearTimeout(timeoutTag);\n  }, [countDownActive, timer]);\n\n  // function to format the time\n  const formatTime = () => {\n    let getSeconds = `${timer % 60}`;\n    let getMinutes = `${Math.floor(timer / 60)}`;\n\n    if (getSeconds <= 9) {\n      getSeconds = `0${timer % 60}`;\n    }\n    if (getMinutes <= 9) {\n      getMinutes = `0${Math.floor(timer / 60)}`;\n    }\n\n    return `${getMinutes}:${getSeconds}`;\n  };\n\n  // use confirmAlert library to reset the clock\n  const resetPomodoro = () => {\n    confirmAlert({\n      title: \"ALERT\",\n      message: \"The timer is still running, are you sure you want to switch?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            setAction(\"pomodoro\");\n            setTimer(1500);\n            setCountDownActive(false);\n          },\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n  const resetShort = () => {\n    confirmAlert({\n      title: \"ALERT\",\n      message: \"The timer is still running, are you sure you want to switch?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            setAction(\"short\");\n            setTimer(300);\n            setCountDownActive(false);\n          },\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n  const resetLong = () => {\n    confirmAlert({\n      title: \"ALERT\",\n      message: \"The timer is still running, are you sure you want to switch?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => {\n            setAction(\"long\");\n            setTimer(900);\n            setCountDownActive(false);\n          },\n        },\n        {\n          label: \"No\",\n        },\n      ],\n    });\n  };\n\n  return (\n    <div className=\"clock-panel-container\">\n      <div className=\"clock-panel\">\n        <div className=\"clock-header-container\">\n          <button\n            className=\"work-button\"\n            onClick={() => {\n              countDownActive ? resetPomodoro() : setAction(\"pomodoro\");\n            }}\n          >\n            Pomodoro\n          </button>\n          <button\n            className=\"short-break-button\"\n            onClick={() => {\n              countDownActive ? resetShort() : setAction(\"short\");\n            }}\n          >\n            Short Break\n          </button>\n          <button\n            className=\"long-break-button\"\n            onClick={() => {\n              countDownActive ? resetLong() : setAction(\"long\");\n            }}\n          >\n            Long Break\n          </button>\n        </div>\n        <div className=\"clock-timer\">{formatTime()}</div>\n        <div>\n          {countDownActive ? (\n            <div className=\"clock-buttons-container\">\n              <button\n                style={{\n                  color: startButton,\n                  position: \"relative\",\n                  top: \"6px\",\n                  boxShadow: \"none\",\n                }}\n                className=\"clock-start-button\"\n                onClick={() => {\n                  setCountDownActive(false);\n                }}\n              >\n                STOP\n              </button>\n              {/* <i className=\"clock-stop-button\">{stepForwardIcon}</i> */}\n            </div>\n          ) : (\n            <button\n              style={{ color: startButton }}\n              className=\"clock-start-button\"\n              onClick={() => {\n                setCountDownActive(true);\n              }}\n            >\n              START\n            </button>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ClockPanelContainer;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./task-setting.scss\";\n\nconst TaskSetting = ({ handleDeleteAllList }) => {\n  const trashIcon = <FontAwesomeIcon icon={faTrash} />;\n  return (\n    <div className=\"task-panel-setting\">\n      <div className=\"setting-item\">\n        <i>{trashIcon}</i>\n        <span onClick={() => handleDeleteAllList()}>Clear all tasks</span>\n      </div>\n      <div className=\"setting-item\">\n        <i>{trashIcon}</i>\n        <span>Clear finished tasks</span>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskSetting;\n","import React from \"react\";\nimport \"./task-item.scss\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst TaskItem = ({ title, note, handleDelete, index }) => {\n  //icons\n  const checkIcon = <FontAwesomeIcon icon={faCheckCircle} />;\n  const trashIcon = <FontAwesomeIcon icon={faTrash} />;\n\n  return (\n    <li className=\"task-item\">\n      <div className=\"task-item-title\">\n        <i className=\"check-icon\">{checkIcon}</i>\n        <span className=\"title\">{title}</span>\n      </div>\n      <div className=\"task-item-icon\">\n        <i className=\"trash-icon\" onClick={() => handleDelete(index)}>\n          {trashIcon}\n        </i>\n      </div>\n      {note ? <span className=\"note\">{note}</span> : null}\n    </li>\n  );\n};\n\nexport default TaskItem;\n","import React from \"react\";\nimport \"./task-item-list.scss\";\nimport TaskItem from \"../task-item/TaskItem\";\n\nconst TaskItemLists = ({ taskList, handleDelete }) => {\n  return (\n    <ul className=\"task-lists-container\">\n      {taskList.map(({ title, note }, index) => {\n        return (\n          <TaskItem\n            key={index}\n            title={title}\n            note={note}\n            handleDelete={handleDelete}\n            index={index}\n          />\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default TaskItemLists;\n","import React, { useState, useRef } from \"react\";\nimport \"./add-task-form.scss\";\n\nconst AddTaskForm = ({ setEditForm, handleTaskContent }) => {\n  // hooks\n  const [addNote, setAddNote] = useState(false);\n  const [btnDisable, setBtnDisable] = useState(true);\n  const titleInput = useRef(\"\");\n  const noteInput = useRef(\"\");\n\n  //submit the form, clear the content, disable the save button\n  const handleSumbit = (e) => {\n    e.preventDefault();\n    const taskContent = {\n      title: titleInput.current.value,\n      note: noteInput.current.value,\n    };\n    handleTaskContent(taskContent);\n    e.target.reset();\n    setBtnDisable(true);\n  };\n  return (\n    <form\n      className=\"add-task-form\"\n      id=\"add-task-form\"\n      onSubmit={(e) => handleSumbit(e)}\n    >\n      <div className=\"add-task-form-content\">\n        <input\n          type=\"text\"\n          placeholder=\"What are you working on?\"\n          ref={titleInput}\n          onChange={() =>\n            titleInput ? setBtnDisable(false) : setBtnDisable(true)\n          }\n        />\n        <div className=\"add-note-button\" onClick={() => setAddNote(true)}>\n          + Add Note\n        </div>\n        {addNote ? (\n          <textarea\n            className=\"add-note-textarea\"\n            name=\"add-note-textarea\"\n            form=\"add-task-form\"\n            placeholder=\"add some notes...\"\n            ref={noteInput}\n          />\n        ) : null}\n      </div>\n      <div className=\"save-cancel-container\">\n        <button type=\"button\" onClick={() => setEditForm(false)}>\n          Cancel\n        </button>\n        <button type=\"submit\" disabled={btnDisable}>\n          Save\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default AddTaskForm;\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisV, faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\n//import components\nimport TaskSetting from \"./task-setting/task-setting\";\nimport TaskItemLists from \"./task-item-lists/TaskItemLists\";\nimport AddTaskForm from \"./add-task-form/AddTaskForm\";\n\n//import css\nimport \"./task-panel.scss\";\n\nconst TaskPanelContainer = () => {\n  //font-awesome icons\n  const ellipsisIcon = <FontAwesomeIcon icon={faEllipsisV} />;\n  const plusIcon = <FontAwesomeIcon icon={faPlus} />;\n\n  //hooks\n  const [taskSetting, setTaskSetting] = useState(false);\n  const [editForm, setEditForm] = useState(false);\n  const [taskList, setTaskList] = useState([]);\n\n  //toggle task form setting\n  const toggleSetting = () => {\n    setTaskSetting(!taskSetting);\n  };\n\n  //add new task list\n  const handleTaskContent = (taskContent) => {\n    setTaskList([...taskList, taskContent]);\n  };\n\n  //remove target list item by index\n  const handleDelete = (index) => {\n    let afterDeleteList = taskList.filter((_, i) => {\n      return i !== index;\n    });\n    setTaskList(afterDeleteList);\n  };\n\n  //clear all the list item\n  const handleDeleteAllList = () => {\n    setTaskList([]);\n    setTaskSetting(false);\n  };\n\n  return (\n    <div className=\"task-panel-container\">\n      <div className=\"task-panel\">\n        <div className=\"task-header-container\">\n          <span>Task</span>\n          <i onClick={() => toggleSetting()}>{ellipsisIcon}</i>\n        </div>\n        {taskSetting ? (\n          <TaskSetting handleDeleteAllList={handleDeleteAllList} />\n        ) : null}\n        <TaskItemLists taskList={taskList} handleDelete={handleDelete} />\n        <div className=\"task-form-container\">\n          {editForm ? (\n            <AddTaskForm\n              setEditForm={setEditForm}\n              handleTaskContent={handleTaskContent}\n            />\n          ) : (\n            <div\n              className=\"add-task-button-container\"\n              onClick={() => setEditForm(true)}\n            >\n              <i>{plusIcon}</i>\n              <span>Add Task</span>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskPanelContainer;\n","import React, { useState } from \"react\";\nimport \"./clock-section.scss\";\n\nimport ClockPanelContainer from \"./components/clock-panel/ClockPanelContainer\";\nimport TaskPanelContainer from \"./components/task-panel/TaskPanelContainer\";\n\nconst ClockSection = () => {\n  //set background color and pass to clock panel for action state to use\n  const [baseColor, setBaseColor] = useState(\"#f81a0ad0\");\n  return (\n    <div className=\"clock-page\" style={{ backgroundColor: baseColor }}>\n      <ClockPanelContainer setBaseColor={setBaseColor} />\n      <TaskPanelContainer />\n    </div>\n  );\n};\n\nexport default ClockSection;\n","import React from \"react\";\nimport \"./document-page.scss\";\n\nconst DocumentPage = () => {\n  return (\n    <div className=\"document-page\">\n      <h1>An online Pomodoro Timer to boost your productivity</h1>\n      <div className=\"text-box\">\n        <h2>What is Pomofocus?</h2>\n        <p>\n          Pomofocus is a customizable pomodoro timer that works on desktop &\n          mobile browser. The aim of this app is to help you focus on any task\n          you are working on, such as study, writing, or coding. This app is\n          inspired by Pomodoro Technique which is a time management method\n          developed by Francesco Cirillo.\n        </p>\n      </div>\n      <div className=\"text-box\">\n        <h2>What is Pomodoro Technique?</h2>\n        <p>\n          The Pomodoro Technique is created by Francesco Cirillo for a more\n          productive way to work and study. The technique uses a timer to break\n          down work into intervals, traditionally 25 minutes in length,\n          separated by short breaks. Each interval is known as a pomodoro, from\n          the Italian word for 'tomato', after the tomato-shaped kitchen timer\n          that Cirillo used as a university student. - Wikipedia\n        </p>\n      </div>\n      <div className=\"text-box\">\n        <h2>Features</h2>\n        <li>Responsive design that works with desktop and mobile</li>\n        <li>\n          Color transition to switch moods between work time and rest time\n        </li>\n      </div>\n    </div>\n  );\n};\n\nexport default DocumentPage;\n","import React from \"react\";\nimport \"./footer.scss\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nconst Footer = () => {\n  const githubIcon = <FontAwesomeIcon icon={faGithub} />;\n  return (\n    <div className=\"footer\">\n      <p>\n        This is an exercise project of copying the exisiting app:\n        <a href=\"https://pomofocus.io/\" className=\"link\">\n          Pomodoro\n        </a>\n      </p>\n\n      <p>Made by Vicky, check more side projects on my GitHub.</p>\n      <a href=\"https://github.com/svickyx\">\n        Click here: <i className=\"github\">{githubIcon}</i>\n      </a>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport \"./app.scss\";\n\nimport ClockHeader from \"./header/ClockHeader\";\nimport ClockSection from \"./clock-section/ClockSection\";\nimport DocumentPage from \"./document-page/DocumentPage\";\nimport Footer from \"./footer/Footer\";\n\nconst App = () => {\n  return (\n    <div>\n      <ClockHeader />\n      <ClockSection />\n      <DocumentPage />\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}